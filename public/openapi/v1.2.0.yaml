# openapi-definition.yaml
swagger: '2.0'
info:
  title: OKR-tracker API
  description: Serverless APIs with API Gateway
  version: 1.2.0
  contact:
    name: Dataplattform
    url: https://okr.knowit.no
    email: aulon.mujaj@knowit.no
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
schemes:
  - https
produces:
  - application/json
x-google-backend:
  address: https://europe-west2-okr-tracker-knowit.cloudfunctions.net/api
  path_translation: APPEND_PATH_TO_ADDRESS
  protocol: h2
security:
  - api_key: []

paths:
  /kpi/{id}:
    get:
      summary: Get KPI
      operationId: getKPI
      parameters:
        - name: id
          in: path
          description: KPI Id
          required: true
          type: string
      responses:
        200:
          description: A successful response
          schema:
            $ref: '#/definitions/Kpi'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Unavailable'
    post:
      summary: Post KPI progression.
      operationId: postKPI
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          description: KPI Id
          required: true
          type: string
        - name: progress
          in: body
          required: true
          description: updated progress
          schema:
            type: number
            example:
              progress: 123
        - name: okr-team-secret
          in: header
          description: Identify yourself with the secret you chose in your Team's settings
          type: string
      responses:
        '200':
          description: A successful response
          schema:
            type: string
            example: 'Updated KPI (${id}) with progress: ${progress}'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Unavailable'
  /keyres/{id}:
    get:
      summary: Get key result
      operationId: getKeyRes
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          description: Key result Id
          required: true
          type: string
      responses:
        '200':
          description: A successful response
          schema:
            $ref: '#/definitions/Keyres'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Unavailable'
    post:
      summary: Post Key result progression.
      operationId: postKeyRes
      security:
        - api_key: []
      parameters:
        - name: id
          in: path
          description: Key res Id
          required: true
          type: string
        - name: progress
          in: body
          required: true
          description: updated progress
          schema:
            type: number
            example:
              progress: 123
        - name: okr-team-secret
          in: header
          description: Identify yourself with the secret you chose in your Team's settings
          type: string
      responses:
        '200':
          description: A successful response
          schema:
            type: string
            example: 'Updated Key result (${id}) with progress: ${progress}'
        400:
          $ref: '#/responses/BadRequest'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Unavailable'
  /audit:
    get:
      summary: Get audit log
      operationId: getAudit
      security:
        - api_key: []
      parameters:
        - name: fromDate
          in: query
          description: from date (inclusive) - example 2021-01-01
          required: false
          type: string
        - name: toDate
          in: query
          description: to date (inclusive)  - example 2021-04-01
          required: false
          type: string
        - name: documentTyoe
          in: query
          description: Type of document (products/organizations/departments/objectives/keyResults) - Required documentId
          required: false
          type: string
        - name: documentId
          in: query
          description: document id (Requires documentType)
          required: false
          type: string
        - name: eventType
          in: query
          description: Type of event (Prefix Organization/KeyResult/Department/Product/Objective, Postfix Updated/Created/Restored/Deleted)
          required: false
          type: string
      responses:
        '200':
          description: A successful response
          schema:
            $ref: '#/definitions/Audit'
        404:
          $ref: '#/responses/NotFound'
        500:
          $ref: '#/responses/Unavailable'

securityDefinitions:
  api_key:
    type: 'apiKey'
    name: 'x-api-key'
    in: 'header'

definitions:
  Keyres:
    properties:
      currentValue:
        type: number
      progression:
        type: number
      description:
        type: string
      created:
        type: string
        format: date-time
      edited:
        type: string
        format: date-time
      createdBy:
        type: string
      editedBy:
        type: string
      lastUpdated:
        type: object
        properties:
          value:
            type: number
          timestamp:
            type: string
            format: date-time
          comment:
            type: string
          createdBy:
            type: string
  Kpi:
    properties:
      currentValue:
        type: number
      name:
        type: string
      type:
        type: string
      created:
        type: string
        format: date-time
      edited:
        type: string
        format: date-time
      createdBy:
        type: string
      editedBy:
        type: string
      lastUpdated:
        type: object
        properties:
          value:
            type: number
          timestamp:
            type: string
            format: date-time
  Audit:
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            diff:
              type: object
            documentRef:
              type: object
            event:
              type: string
            user:
              type: string
            timestamp:
              type: string
              format: date-time

responses:
  NotFound:
    description: Resource not found
    schema:
      type: object
      properties:
        status:
          type: number
          example: 404
        message:
          type: string
  Unavailable:
    description: Something went wrong
    schema:
      type: object
      properties:
        status:
          type: number
          example: 500
        message:
          type: string
  BadRequest:
    description: A bad request
    schema:
      type: object
      properties:
        status:
          type: number
          example: 400
        message:
          type: string
